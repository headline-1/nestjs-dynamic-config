name: Release

on:
  push:
    branches:
    - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with: { node-version: 12 }
    - name: Yarn cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Build source files
      run: yarn build
    - name: Upload built artifacts
      uses: actions/upload-artifact@v2-preview
      with: { name: dist, path: ./dist }

  github-release:
    outputs:
      release_sha: ${{ steps.release_sha.outputs.SHA }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with: { node-version: 12 }
    - name: Yarn cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Download built artifacts
      uses: actions/download-artifact@v1
      with: { name: dist, path: ./dist/ }
    - name: Checkout Hack (Push Ability)
      run: |
        git config --global user.name "Headline1 Automation"
        git config --global user.email "automation@headline-1.dev"
        git remote set-url origin https://automation:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
        git remote -v
        git checkout "${GITHUB_REF:11}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create release
      run: |
        yarn release:version
        git push --follow-tags
    - name: Get SHA
      id: release_sha
      run: |
        sha_new=$(git rev-parse HEAD)
        echo "::set-output name=SHA::$sha_new"
  npm-publish:
    runs-on: ubuntu-latest
    needs: github-release
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ needs.github-release.outputs.release_sha }}
        fetch-depth: 0
    - uses: actions/setup-node@v1
      with: { node-version: 12 }
    - name: Yarn cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Download built artifacts
      uses: actions/download-artifact@v1
      with: { name: dist, path: ./dist/ }
    - name: Create release & publish package
      run: |
        npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
        yarn publish --access public
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
